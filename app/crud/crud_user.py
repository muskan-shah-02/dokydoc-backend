from sqlalchemy.orm import Session

from app.models.user import User
from app.schemas.user import UserCreate
from app.core.security import get_password_hash


def get_user_by_email(db: Session, *, email: str) -> User | None:
    """
    Fetches a user from the database by their email.

    :param db: The database session.
    :param email: The email of the user to fetch.
    :return: The user object if found, otherwise None.
    """
    return db.query(User).filter(User.email == email).first()


def create_user(db: Session, *, obj_in: UserCreate) -> User:
    """
    Creates a new user in the database.

    :param db: The database session.
    :param obj_in: The user data from the API (Pydantic schema).
    :return: The newly created user object.
    """
    # Create a dictionary of the data, excluding the plain password
    create_data = obj_in.dict(exclude={"password"})
    
    # Create the hashed password
    hashed_password = get_password_hash(obj_in.password)
    
    # Create a SQLAlchemy User model instance
    db_obj = User(**create_data, hashed_password=hashed_password)
    
    # Add the new user object to the session
    db.add(db_obj)
    
    # Commit the changes to the database
    db.commit()
    
    # Refresh the object to get the ID generated by the database
    db.refresh(db_obj)
    
    return db_obj

